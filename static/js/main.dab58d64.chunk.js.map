{"version":3,"sources":["components/tablecomponent/table.js","App.js","index.js"],"names":["Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","App","useState","setData","useMemo","Header","accessor","Cell","value","src","width","useEffect","a","axios","result","console","log","results","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"wOAGe,SAASA,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAAQ,EAQ3CC,mBAAS,CACXF,UACAC,SAPAE,EAH6C,EAG7CA,cACAC,EAJ6C,EAI7CA,kBACAC,EAL6C,EAK7CA,aACAC,EAN6C,EAM7CA,KACAC,EAP6C,EAO7CA,WAUF,OACE,kDAAWJ,KAAX,cACE,gCACGE,EAAaG,KAAI,SAAAC,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,8CAAQA,EAAOC,kBAAf,aAAkCD,EAAOE,OAAO,wBAKxD,iDAAWV,KAAX,aACGE,EAAKE,KAAI,SAACO,EAAKC,GAEd,OADAT,EAAWQ,GAET,8CAAQA,EAAIE,eAAZ,aACGF,EAAIG,MAAMV,KAAI,SAAAW,GACb,OAAO,8CAAQA,EAAKC,gBAAb,aAA8BD,EAAKL,OAAO,2B,2BCwGlDO,MA3Df,WAAe,MAEWC,mBAAS,IAFpB,mBAENrB,EAFM,KAEAsB,EAFA,KAIPvB,EAAUwB,mBACd,iBAAM,CACJ,CAEEC,OAAQ,YAERzB,QAAS,CACP,CACEyB,OAAQ,UACRC,SAAU,gBACVC,KAAM,gBAAWC,EAAX,EAAGT,KAAQS,MAAX,OACJ,qBACEC,IAAKD,EACLE,MAAO,OAIb,CACEL,OAAQ,aACRC,SAAU,cAEZ,CACED,OAAQ,YACRC,SAAU,aAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,eACRC,SAAU,cAKlB,IAYF,OARAK,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEACsBC,IAAM,yCAD5B,OACOC,EADP,OAECC,QAAQC,IAAIF,EAAOjC,KAAKoC,SACxBd,EAAQW,EAAOjC,KAAKoC,SAHrB,0CAAD,KAKC,IAGD,qBAAKC,UAAU,MAAf,SACE,cAACvC,EAAD,CAAOC,QAASA,EAASC,KAAMA,OClIrCsC,IAASzB,OACP,cAAC,IAAM0B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dab58d64.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useTable } from \"react-table\";\r\n\r\nexport default function Table({ columns, data }) {\r\n  // Use the useTable Hook to send the columns and data to build the table\r\n  const {\r\n    getTableProps, // table props from react-table\r\n    getTableBodyProps, // table body props from react-table\r\n    headerGroups, // headerGroups, if your table has groupings\r\n    rows, // rows for the table based on the data passed\r\n    prepareRow // Prepare the row (this function needs to be called for each row before getting the row props)\r\n  } = useTable({\r\n    columns,\r\n    data\r\n  });\r\n\r\n  /* \r\n    Render the UI for your table\r\n    - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\r\n  */\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n              })}\r\n            </tr>\r\n        );\r\n    })}\r\n  </tbody>\r\n</table>\r\n);\r\n}   \r\n    ","// import reactDom from \"react-dom\";\r\n// import EC from \"./components/employeeCard\";\r\n// import API from \"./utlities/api\";\r\n// import React, { Component } from \"react\";\r\n// import SearchBar from \"./components/searchbar/index\";\r\n\r\n\r\n// const App = () => {\r\n\r\n// }\r\n// class App extends Component {\r\n//   state = {\r\n//     result: [],\r\n//     search: \"\",\r\n//     searchResult: []\r\n//   };\r\n\r\n//   handleInputChange = (e) => {\r\n//       this.setState({\r\n//       search: e.target.value\r\n//     })\r\n//   }\r\n\r\n//   handleFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n//       const filteredEmployee = this.state.result.filter((employee) => {\r\n//         return employee.name.first.includes(this.state.search) || employee.name.last.includes(this.state.search);\r\n//       })\r\n//       this.setState({ searchResult: filteredEmployee})\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     API.getEmployees()\r\n//     // .then(res => console.log(res))\r\n//     .then(res => this.setState({ result: res.data.results}))\r\n//   };\r\n//   render(){\r\n//     if (this.state.result < 1) {\r\n//       return(<div>Loading...</div>)  \r\n//     }\r\n//     else {\r\n//       return(\r\n//         <>\r\n//         <SearchBar \r\n//           handleInputChange={this.handleInputChange} \r\n//           handleFormSubmit={this.handleFormSubmit} \r\n//           search={this.state.search}\r\n//         />\r\n      \r\n//         {this.state.result.map((employee) => {\r\n//           return (\r\n//             <div className=\"App\" key={employee.email}>\r\n//               <EC employee={employee}/>\r\n              \r\n//             </div>\r\n//           )\r\n          \r\n//         })\r\n//       }\r\n//       </>  \r\n//       )\r\n//   } \r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n// js sort objects to sort by name\r\n\r\n// \r\n\r\nimport React, { useMemo, useState, useEffect } from \"react\";\r\nimport ReactTable from \"react-table-6\";  \r\nimport \"react-table-6/react-table.css\" \r\nimport Table from \"./components/tablecomponent/table\";\r\nimport axios from \"axios\";\r\nimport 'react-table-6/react-table.css';\r\nimport Bootstrap from \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// import \"./App.css\";\r\n\r\nfunction App() {\r\n  // data state to store the TV Maze API data. Its initial value is an empty array\r\n  const [data, setData] = useState([]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        // first group - TV Show\r\n        Header: \"Employees\",\r\n        // First group columns\r\n        columns: [\r\n          {\r\n            Header: \"Picture\",\r\n            accessor: \"picture.large\",\r\n            Cell: ({ cell: { value } }) => (\r\n              <img\r\n                src={value}\r\n                width={60}\r\n              />\r\n            )\r\n          },\r\n          {\r\n            Header: \"First Name\",\r\n            accessor: \"name.first\"\r\n          },\r\n          {\r\n            Header: \"Last name\",\r\n            accessor: \"name.last\"\r\n          },\r\n          {\r\n            Header: \"Email\",\r\n            accessor: \"email\"\r\n          },\r\n          {\r\n            Header: \"Phone Number\",\r\n            accessor: \"phone\"\r\n          },\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  // Using useEffect to call the API once mounted and set the data\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await axios(\"https://randomuser.me/api/?results=20\");\r\n      console.log(result.data.results);\r\n      setData(result.data.results);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Table columns={columns} data={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Bootstrap from \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}